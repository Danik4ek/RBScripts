local Players = game:GetService("Players")
local TextService = game:GetService("TextService")

local player = Players.LocalPlayer
local searchText = "–≤–∞–º –Ω—É–∂–Ω–æ"
local searchTextLower = string.lower(searchText)

-- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ª—é–±–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
local function getSafeText(obj)
    local text = nil
    
    -- –ó–∞—â–∏—â—ë–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    pcall(function()
        -- –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
            text = obj.Text
        elseif obj:IsA("ImageLabel") then
            text = obj:GetAttribute("AltText") or obj:GetAttribute("Tooltip")
        end
        
        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç–µ–∫—Å—Ç–∞
        if not text then
            text = obj:GetAttribute("Text") 
                 or obj:GetAttribute("Description")
                 or obj.Name
        end
    end)
    
    return text and tostring(text) or nil
end

-- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
local function isTextMatch(obj)
    local text = getSafeText(obj)
    if not text then return false end
    
    -- –ó–∞—â–∏—Ç–∞ –æ—Ç nil –ø–æ—Å–ª–µ tostring
    local success, result = pcall(function()
        return string.find(string.lower(text), searchTextLower)
    end)
    
    return success and result ~= nil
end

-- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫
local function findText()
    local targets = {
        player:WaitForChild("PlayerGui"),
        workspace,
        game:GetService("StarterGui")
    }

    local results = {}
    
    for _, target in ipairs(targets) do
        if target then
            for _, obj in ipairs(target:GetDescendants()) do
                if isTextMatch(obj) then
                    table.insert(results, {
                        Object = obj,
                        Path = obj:GetFullName(),
                        Text = getSafeText(obj)
                    })
                end
            end
        end
    end
    
    return results
end

-- –£–º–Ω—ã–π –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
local function printResults(results)
    if #results == 0 then
        print("üîç –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("- –í–∏–¥–µ–Ω –ª–∏ —Ç–µ–∫—Å—Ç –≤ –∏–≥—Ä–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å")
        print("- –ù–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —á–∞—Å—Ç—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        print("- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞")
        return
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: "..#results)
    for i, item in ipairs(results) do
        print(string.format("%d. %s (%s)", i, item.Path, item.Object.ClassName))
        print("   –¢–µ–∫—Å—Ç: "..(item.Text or "---"))
    end
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
while true do
    local results = findText()
    printResults(results)
    wait(5) -- –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
end
